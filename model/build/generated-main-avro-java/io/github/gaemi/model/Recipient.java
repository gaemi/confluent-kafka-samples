/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.github.gaemi.model;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** 받는 사람 */
@org.apache.avro.specific.AvroGenerated
public class Recipient extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5054262278571292035L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Recipient\",\"namespace\":\"io.github.gaemi.model\",\"doc\":\"받는 사람\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"이름\",\"default\":null},{\"name\":\"address1\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"주소\",\"default\":null},{\"name\":\"address2\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"상세주소\",\"default\":null},{\"name\":\"phoneNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"휴대폰번호\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** 이름 */
   private java.lang.String name;
  /** 주소 */
   private java.lang.String address1;
  /** 상세주소 */
   private java.lang.String address2;
  /** 휴대폰번호 */
   private java.lang.String phoneNumber;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Recipient() {}

  /**
   * All-args constructor.
   * @param name 이름
   * @param address1 주소
   * @param address2 상세주소
   * @param phoneNumber 휴대폰번호
   */
  public Recipient(java.lang.String name, java.lang.String address1, java.lang.String address2, java.lang.String phoneNumber) {
    this.name = name;
    this.address1 = address1;
    this.address2 = address2;
    this.phoneNumber = phoneNumber;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return address1;
    case 2: return address2;
    case 3: return phoneNumber;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.String)value$; break;
    case 1: address1 = (java.lang.String)value$; break;
    case 2: address2 = (java.lang.String)value$; break;
    case 3: phoneNumber = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * @return 이름
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Gets the value of the 'address1' field.
   * @return 주소
   */
  public java.lang.String getAddress1() {
    return address1;
  }


  /**
   * Gets the value of the 'address2' field.
   * @return 상세주소
   */
  public java.lang.String getAddress2() {
    return address2;
  }


  /**
   * Gets the value of the 'phoneNumber' field.
   * @return 휴대폰번호
   */
  public java.lang.String getPhoneNumber() {
    return phoneNumber;
  }


  /**
   * Creates a new Recipient RecordBuilder.
   * @return A new Recipient RecordBuilder
   */
  public static io.github.gaemi.model.Recipient.Builder newBuilder() {
    return new io.github.gaemi.model.Recipient.Builder();
  }

  /**
   * Creates a new Recipient RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Recipient RecordBuilder
   */
  public static io.github.gaemi.model.Recipient.Builder newBuilder(io.github.gaemi.model.Recipient.Builder other) {
    return new io.github.gaemi.model.Recipient.Builder(other);
  }

  /**
   * Creates a new Recipient RecordBuilder by copying an existing Recipient instance.
   * @param other The existing instance to copy.
   * @return A new Recipient RecordBuilder
   */
  public static io.github.gaemi.model.Recipient.Builder newBuilder(io.github.gaemi.model.Recipient other) {
    return new io.github.gaemi.model.Recipient.Builder(other);
  }

  /**
   * RecordBuilder for Recipient instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Recipient>
    implements org.apache.avro.data.RecordBuilder<Recipient> {

    /** 이름 */
    private java.lang.String name;
    /** 주소 */
    private java.lang.String address1;
    /** 상세주소 */
    private java.lang.String address2;
    /** 휴대폰번호 */
    private java.lang.String phoneNumber;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.github.gaemi.model.Recipient.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.address1)) {
        this.address1 = data().deepCopy(fields()[1].schema(), other.address1);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.address2)) {
        this.address2 = data().deepCopy(fields()[2].schema(), other.address2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.phoneNumber)) {
        this.phoneNumber = data().deepCopy(fields()[3].schema(), other.phoneNumber);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Recipient instance
     * @param other The existing instance to copy.
     */
    private Builder(io.github.gaemi.model.Recipient other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.address1)) {
        this.address1 = data().deepCopy(fields()[1].schema(), other.address1);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.address2)) {
        this.address2 = data().deepCopy(fields()[2].schema(), other.address2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.phoneNumber)) {
        this.phoneNumber = data().deepCopy(fields()[3].schema(), other.phoneNumber);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'name' field.
      * 이름
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * 이름
      * @param value The value of 'name'.
      * @return This builder.
      */
    public io.github.gaemi.model.Recipient.Builder setName(java.lang.String value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * 이름
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * 이름
      * @return This builder.
      */
    public io.github.gaemi.model.Recipient.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'address1' field.
      * 주소
      * @return The value.
      */
    public java.lang.String getAddress1() {
      return address1;
    }

    /**
      * Sets the value of the 'address1' field.
      * 주소
      * @param value The value of 'address1'.
      * @return This builder.
      */
    public io.github.gaemi.model.Recipient.Builder setAddress1(java.lang.String value) {
      validate(fields()[1], value);
      this.address1 = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'address1' field has been set.
      * 주소
      * @return True if the 'address1' field has been set, false otherwise.
      */
    public boolean hasAddress1() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'address1' field.
      * 주소
      * @return This builder.
      */
    public io.github.gaemi.model.Recipient.Builder clearAddress1() {
      address1 = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'address2' field.
      * 상세주소
      * @return The value.
      */
    public java.lang.String getAddress2() {
      return address2;
    }

    /**
      * Sets the value of the 'address2' field.
      * 상세주소
      * @param value The value of 'address2'.
      * @return This builder.
      */
    public io.github.gaemi.model.Recipient.Builder setAddress2(java.lang.String value) {
      validate(fields()[2], value);
      this.address2 = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'address2' field has been set.
      * 상세주소
      * @return True if the 'address2' field has been set, false otherwise.
      */
    public boolean hasAddress2() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'address2' field.
      * 상세주소
      * @return This builder.
      */
    public io.github.gaemi.model.Recipient.Builder clearAddress2() {
      address2 = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'phoneNumber' field.
      * 휴대폰번호
      * @return The value.
      */
    public java.lang.String getPhoneNumber() {
      return phoneNumber;
    }

    /**
      * Sets the value of the 'phoneNumber' field.
      * 휴대폰번호
      * @param value The value of 'phoneNumber'.
      * @return This builder.
      */
    public io.github.gaemi.model.Recipient.Builder setPhoneNumber(java.lang.String value) {
      validate(fields()[3], value);
      this.phoneNumber = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'phoneNumber' field has been set.
      * 휴대폰번호
      * @return True if the 'phoneNumber' field has been set, false otherwise.
      */
    public boolean hasPhoneNumber() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'phoneNumber' field.
      * 휴대폰번호
      * @return This builder.
      */
    public io.github.gaemi.model.Recipient.Builder clearPhoneNumber() {
      phoneNumber = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public Recipient build() {
      try {
        Recipient record = new Recipient();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.String) defaultValue(fields()[0]);
        record.address1 = fieldSetFlags()[1] ? this.address1 : (java.lang.String) defaultValue(fields()[1]);
        record.address2 = fieldSetFlags()[2] ? this.address2 : (java.lang.String) defaultValue(fields()[2]);
        record.phoneNumber = fieldSetFlags()[3] ? this.phoneNumber : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
